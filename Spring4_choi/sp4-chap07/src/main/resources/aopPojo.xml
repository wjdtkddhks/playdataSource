<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
			xmlns:aop = "http://www.springframework.org/schema/aop"
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			xsi:schemaLocation="http://www.springframework.org/schema/beans
										http://www.springframework.org/schema/beans/spring-beans.xsd
										http://www.springframework.org/schema/aop
										http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!-- proxy-target-class >> true이면 대상객체가 인터페이스 구현하고 있어도 proxy 객체 java class 이용해서 생성  -->
	
	<!--  공통 기능을 제공할 클래스를 빈으로 등록 -->
	<bean id="exeTimeAspect" class="aspect.ExeTimeAspect2" />
	
	<!--  Aspect 설정: Advice를 어떤 Pointcut에 적용할지 설정-->
<!-- 	<aop:config proxy-target-class="true">
		<aop:aspect id="measureAspect" ref="exeTimeAspect">
			<aop:pointcut id="publicMethod" expression="execution(public * chap07..*(..))" />
			<aop:around pointcut-ref="publicMethod" method="measure" />
		</aop:aspect>
	</aop:config> -->
	
	<bean id="impeCal" class="chap07.ImpeCalculator" />
	<bean id="recCal" class="chap07.RecCalculator" />
	
</beans>